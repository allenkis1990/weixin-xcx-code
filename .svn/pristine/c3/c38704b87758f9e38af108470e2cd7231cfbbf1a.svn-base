// pages/account/login.js
const app = getApp()
let config = require('../../../config.js')
Page({

  /**
   * 页面的初始数据
   */
  data: {
    account: '',
    password: '',
    //TODO 跳转类表页
    objectUrl: '/pages/trainclass/trainingClassList/trainingClassList',
    clickType: -1, //0.登录按钮 | 1.忘记密码

  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  },
  /**
   * 获取本地UnionIdAndOpenId数据
   */
  getStorageUnionIdAndOpenId() {
    var context = this
    app.utils.getStorageUnionIdAndOpenId().then(data => {
      if (data.success) {
        app.config.casConfig.unionId = data.unionId
        app.config.casConfig.openId = data.openId
        context.requestAccountBindWX();
      } else {
        context.requestCode()
      }
    }).catch(e => {
      context.requestCode()
      console.log(e)
    })
  },

  /**
   * 网路请求  微信获取code
   * index--区分自动登录
   */
  requestCode(index) {
    var context = this
    // 登录
    wx.login({
      success: res => {
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
        if (res.code) {
          app.config.casConfig.code = res.code
          wx.getUserInfo({
            success: function (res) {
              context.requestUnionIdAndOpenId(app.config.casConfig.code, res.encryptedData, res.iv)
            }
          })
        }
      }
    })
  },

  /**
   * 网络请求 获取unionid和openid
   * @param code 
   * @param encryptedData  包括敏感数据在内的完整用户信息的加密数据
   * @param iv 加密算法的初始向量
   */
  requestUnionIdAndOpenId(code, encryptedData, iv) {
    var that = this
    var params = {
      code: code,
      encryptedData: encryptedData,
      iv: iv,
      type: 1
    }
    wx.showLoading({ title: '加载中......', mask: true })
    app.requestData(app.config.wxInfoUrl, params, "POST").then(data => {
      wx.hideLoading()
      if (data.head.code == app.constant.network_result_success) {
        //保存本地
        that.saveStorageUnionIdAndeOpenId(data.data.unionId, data.data.openId)
        //赋值全局
        app.config.casConfig.unionId = data.data.unionId
        app.config.casConfig.openId = data.data.openId
        app.config.casConfig.accessToken = data.data.accessToken
        that.requestAccountBindWX();

      } else {
        return wx.showToast({
          title: data.head.message,
          icon: 'none'
        })
      }
    }).catch(e => {
      wx.hideLoading()
      console.log(e)
    })
  },

  /**
   * 保存到本地缓存
   */
  saveStorageUnionIdAndeOpenId(unionId, openId) {
    wx.setStorage({
      key: 'unionId',
      data: unionId,
    })
    wx.setStorage({
      key: 'openId',
      data: openId,
    })
  },

  /**
   * 登录
   */
  login() {
    let loginResultCallback = this.loginResultCallback
    wx.showLoading({ title: '登录中......', mask: true })
    require('../../../utils/casLogin.js').loginWithWX(loginResultCallback)
  },

  /**
   * 账号输入监听
   */
  accountInput(e) {
    this.setData({ account: e.detail.value })
  },

  /**
   * 密码输入监听
  */
  passwordInput(e) {
    this.setData({ password: e.detail.value })
  },

  /**
   * 点击事件--登录
   */
  LoginClick() {
    var _this = this
    if (_this.data.account == '' || _this.data.account == undefined || _this.data.account == null) {
      return wx.showToast({
        title: "身份证号不可为空",
        icon: 'none'
      })
    }
    if (_this.data.password == '' || _this.data.password == undefined || _this.data.password == null) {
      return wx.showToast({
        title: "密码不可为空",
        icon: 'none'
      })
    }
    /*if (!app.utils.verIdentification(_this.data.account)) {
      return wx.showToast({
        title: "请输入18位身份证号",
        icon: 'none'
      })
    }*/
    if (_this.data.password.length < 6 || _this.data.password.length > 18) {
      return wx.showToast({
        title: "请输入6-18位密码",
        icon: 'none'
      })
    }

    _this.setData({
      clickType: 0
    })
    //弹窗授权信息
    wx.getSetting({
      success: res => {
        if (!res.authSetting['scope.userInfo']) {
          _this.openConfirm();
        } else {
          _this.accountBindWX();
        }
      }
    })

  },

  /**
   * 账号密码登录并绑定该微信（前提是微信、平台账号都未与其他绑定，平台账号绑定当前微信就登录）
   */
  accountBindWX() {
    this.getStorageUnionIdAndOpenId()
  },

  /**
 * 网络请求--账号以及微信绑定
 * 先拿账号密码去请求userId然后再用userId openId unionId去绑定微信
 */
  requestAccountBindWX() {
      var context=this;
      var getUserIdParams={
          account: context.data.account,
          password: context.data.password
      };
      wx.showLoading({ title: '加载中......', mask: true })
      app.requestData(app.config.adminSystemUserLogin, getUserIdParams, "POST").then(data => {
          wx.hideLoading()
          if (data.head.code !== app.constant.network_result_success) {
              //网络请求失败
              return wx.showToast({
                  title: data.head.message,
                  icon: 'none'
              })
          }else{
              console.log(data.data);
              var userId=data.data.haveBind;
              if(userId){
                  //把拿到的userId存在本地
                  wx.setStorage({
                      key:"loginUserId",
                      data:data.data.haveBind
                  })
                  //绑定微信
                  bindWx(context,userId);
              }else{
                  return wx.showToast({
                      title: '帐号或者密码错误',
                      icon: 'none'
                  })
              }
          }
      }).catch(e => {
          wx.hideLoading()
          console.log(e)
      })
  },

  /**
   * 点击事件--忘记密码
   */
  // forgotClick() {
  //   var comtext = this
  //   comtext.setData({
  //     clickType: 1
  //   })
  //   //弹窗授权信息
  //   wx.getSetting({
  //     success: res => {
  //       if (!res.authSetting['scope.userInfo']) {
  //         comtext.openConfirm();
  //       } else {
  //         wx.navigateTo({
  //           url: '/pages/account/forgotPW/forgotPW'
  //         });
  //       }
  //     }
  //   })
  // },

  /**
   * 弹窗授权用户信息
   */
  openConfirm: function () {
    var comtext = this
    wx.showModal({
      content: '检测到您没授权用户信息，是否去设置打开？',
      confirmText: "确认",
      cancelText: "取消",
      success: function (res) {
        console.log(res);
        //点击“确认”时打开设置页面
        if (res.confirm) {
          console.log('用户点击确认')
          wx.openSetting({
            success: (res) => {
              if (res.authSetting["scope.userInfo"]) {
                //识别按钮不同操作。clickType：0.登录 | 1.忘记密码
                if (comtext.data.clickType == 0) {
                  comtext.accountBindWX()
                } else if (comtext.data.clickType == 1) {
                  wx.navigateTo({
                    url: '/pages/account/forgotPW/forgotPW'
                  });
                }
              }
            }
          })
        } else {
          console.log('用户点击取消')
        }
      }
    });
  },

  /**
   * 登录流程结果回调
   * state: 0 成功；1帐号或密码不对；-1 网络请求异常
   */
  loginResultCallback(state, message) {
    var _this = this
    switch (state) {
      case 0: {
        console.log('TODO 登录成功')
        var param = {
        }
        const app = getApp()
        app.getServeContextInfo()
        app.requestData(app.config.getUserInfo, param, "GET").then(data => {
          wx.hideLoading()
          if (data.head.code != app.constant.network_result_success) {
            return wx.showToast({
              title: '登录失败',
              icon: 'none'
            })
          } else {
            app.userInfo = data.data.userInfo
            wx.getStorage({
              key: 'objectUrl',
              success: function (res) {
                var objectUrl = res.data
                if (objectUrl == null || object == undefined || object == '') {
                  wx.reLaunch({
                    url: _this.data.objectUrl,
                  })
                } else {
                  wx.reLaunch({
                    url: res.data
                  })
                }
              }, fail: function (res) {
                wx.reLaunch({
                  url: _this.data.objectUrl,
                })
              }
            })
          }
        }).catch(e => {
          wx.hideLoading()
          console.log(e)
        })
        break;
      }
      case 1: {
        wx.hideLoading()
        console.log('TODO 帐号信息有误')
        break;
      }
      case -1: {
        wx.hideLoading()
        console.log('TODO 网络请求异常')
        break;
      }
    }
  },
  /**
   * 注册新用户
   */
  registeredClick() {
    var comtext = this
    comtext.setData({
      clickType: 0
    })
    //弹窗授权信息
    wx.getSetting({
      success: res => {
        if (!res.authSetting['scope.userInfo']) {
          comtext.openConfirm();
        } else {
          wx.navigateTo({
            url: '/pages/account/registered/registered'
          });
        }
      }
    })
  }
})

function bindWx(context,userId){
    var param = {
          account: context.data.account,
          password: context.data.password,
          userId:userId,
          unionId: app.config.casConfig.unionId,
          openId: app.config.casConfig.openId,
          accessToken: app.config.casConfig.accessToken,
          connectType: '43'
        }
        wx.showLoading({ title: '加载中......', mask: true })
        app.requestData(app.config.accountBindWX, param, "POST").then(data => {
          wx.hideLoading()
          if (data.head.code !== app.constant.network_result_success) {
            //网络请求失败
            return wx.showToast({
              title: data.head.message,
              icon: 'none'
            })
          }
          if (data.head.code === '801') {
            return wx.showToast({
              title: '账号错误',
              icon: 'none'
            })
          } else if (data.head.code === '802') {
            return wx.showToast({
              title: '密码错误',
              icon: 'none'
            })
          }

          else if (data.head.code === '803') {
            return wx.showToast({
              title: '该微信号被其他账号绑定',
              icon: 'none'
            })
          }

          else if (data.head.code === '804') {
            return wx.showToast({
              title: '该账号已关联了其他微信账号，无法登录！请使用与该微信号绑定的账号登录！',
              icon: 'none'
            })
          }

          //TODO 前提是微信、平台账号都未与其他绑定，或者平台账号和该微信绑定的平台账号一致
          context.login()

        }).catch(e => {
          wx.hideLoading()
          console.log(e)
        })
}
